<div tal:define="delayed_load delayed_load|field.widget.delayed_load;
                 tinymce_options tinymce_options|field.widget.tinymce_options;
                 formid field.get_root().formid;
                 oid oid|formid+'-'+field.oid;
                 name name|field.name;
                 css_class getattr(field.widget, 'css_class', '');
                  inline getattr(field.widget, 'inline', False)"
    xmlns:i18n="http://xml.zope.org/namespaces/i18n" 
    i18n:domain="pontus"
    tal:omit-tag="">

    <style type="text/css">
      .deform .tinymce-preload{
          border: 1px solid #CCC;
          height: 240px;
          display: block;
      }
    </style>  
  <textarea id="${oid}" name="${name}" 
            class='tinymce form-control ${css_class}' tal:content="structure cstruct" />
  <span id="${oid}-preload" class="tinymce-preload" 
        tal:content="structure cstruct" />
  <script type="text/javascript">
    function get_language(){
      var language = '<tal:block i18n:translate="language-code">en</tal:block>';
      if (language == 'fr'){ language = 'fr_FR'};
      return  language
    };
    (function($){
      deform.addCallback('${oid}', function(oid) {
        var jqoid = $('#' + oid);
        var jqoid_preload = $('#' + oid + '-preload');
        jqoid.hide();
        jqoid_preload.click(function(){
          jqoid.show();
          jqoid_preload.remove();
          tinyMCE.init({
            invalid_elements : "style,script",
            language: get_language(),
            <tal:block condition="inline">inline: true,</tal:block>
            body_class: 'form-control',
            plugins: ["noneditable preventdelete advlist autolink lists link image charmap print preview anchor",
                      "searchreplace visualblocks code fullscreen",
                      "insertdatetime media table contextmenu paste textcolor"
                      ],
            <tal:block condition="tinymce_options">${tinymce_options},</tal:block>
            elements: oid,
            setup : function(ed) {
                    ed.on('init', function(e) {
                       var ed_init = jQuery.Event("ed_init");
                       ed_init.ed = ed;
                       $('#' + oid).trigger(ed_init);
                    });
                  }
          });
          jqoid_preload.unbind('click');
        });
        if (!${str(bool(delayed_load)).lower()}) {
          jqoid_preload.click();
        }
      });
      $().bind('form.pre.serialize', function(event, $form, options) {
        tinyMCE.triggerSave();
      });
    })(jQuery);
  </script>
</div>
