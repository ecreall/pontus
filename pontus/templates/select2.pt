<div tal:define="
     name name|field.name;
     style field.widget.style;
     oid oid|field.oid;
     css_class css_class|field.widget.css_class;
     optgroup_class optgroup_class|field.widget.optgroup_class;
     multiple multiple|field.widget.multiple;
     id oid+'-'+field.get_root().formid"
     tal:omit-tag="">

   <style>
    .form-control .select2-choice {
        border: 0;
        border-radius: 2px;
    }

    .form-control .select2-choice .select2-arrow {
        border-radius: 0 2px 2px 0;   
    }

    .form-control.select2-container {
        height: auto !important;
        padding: 0px;
    }

    .form-control.select2-container.select2-dropdown-open {
        border-color: #5897FB;
        border-radius: 3px 3px 0 0;
    }

    .form-control .select2-container.select2-dropdown-open .select2-choices {
        border-radius: 3px 3px 0 0;
    }

    .form-control.select2-container .select2-choices {
        border: 0 !important;
        border-radius: 3px;
    }
   </style>
  <input type="hidden" name="__start__" value="${name}:sequence"
         tal:condition="multiple" />

  <select tal:attributes="
          name name;
          id id;
          class string: form-control ${css_class};
          data-placeholder field.widget.placeholder|None;
          multiple multiple;
          style style;">
    <tal:loop tal:repeat="item values">
      <optgroup tal:condition="isinstance(item, optgroup_class)"
                tal:attributes="label item.label">
        <option tal:repeat="(value, description) item.options"
                tal:attributes="
                selected (multiple and value in cstruct or value == cstruct) and 'selected';
                label field.widget.long_label_generator and description;
                value value"
                tal:content="field.widget.long_label_generator and field.widget.long_label_generator(item.label, description) or description"/>
      </optgroup>
      <option tal:condition="not isinstance(item, optgroup_class)"
              tal:attributes="
              selected (multiple and item[0] in cstruct or item[0] == cstruct) and 'selected';
              value item[0]">${item[1]}</option>
    </tal:loop>
  </select>

  <script type="text/javascript">
   deform.addCallback(
     '${id}',
     function(oid) {
       <div tal:omit-tag="" tal:condition="field.widget.create" >
       var init_ops = {tokenSeparators: [","], 
                       containerCssClass: 'form-control',
                       createSearchChoice:function(term, data) {
                                 if ($(data).filter(function() {
                                       return this.text.localeCompare(term)===0; 
                                       }).length===0) { return {id:term, text:term};} }};
       $('#' + oid).on('selected',function(data){select_option(oid, data)});
       $('#' + oid).on('removed',function(data){unselect_option(oid, data)});
       $('#' + oid).select2(init_ops);
       </div>
       <div tal:omit-tag="" tal:condition="not field.widget.create" >
         $('#' + oid).select2({containerCssClass: 'form-control'});
       </div>
     }
   );
  </script>

  <input type="hidden" name="__end__" value="${name}:sequence"
         tal:condition="multiple" />
</div>

